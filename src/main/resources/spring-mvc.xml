<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.vector.blog" />

    <!--<bean id="propertyConfigurer"-->
          <!--class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
        <!--<property name="location" value="classpath:email.properties" />-->
    <!--</bean>-->

    <!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
    <mvc:annotation-driven/>
    <!-- 静态资源处理  css js imgs -->
    <mvc:resources location="/css/" mapping="/css/**"/>
    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/images/**" location="/images/"/>
    <mvc:resources mapping="/static/**" location="/static/"/>
    <mvc:resources mapping="/skins/next/static/**" location="/skins/next/static/"/>
    <!--<mvc:resources mapping="/skins/next/static/css/**" location="/skins/next/static/css/"/>-->
    <!--<mvc:resources mapping="/skins/next/static/js/**" location="/skins/next/static/js/"/>-->
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean
            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->
            </list>
        </property>
    </bean>


    <!--JavaMail 相关配置-->
    <bean id="mailSender"
          class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${host}"/>
        <property name="username" value="${from}"/>
        <property name="password" value="${emailpass}"/>
        <property name="protocol" value="${protocol}"/>
        <property name="defaultEncoding" value="${encoding}"/>
        <property name="port" value="465"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.from">15680780793@163.com</prop>
                <prop key="mail.debug">true</prop>
                <!--<prop key="mail.transport.protocol">smtp</prop>-->
                <prop key="mail.smtp.ssl.enable">true</prop>
            </props>
        </property>
    </bean>

    <!--<bean id="mail" class="com.white.ssm.mail.SendEmailServiceService"></bean>-->

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
        <!-- 启用是为了推迟文件解析，以便捕获文件大小异常 -->
        <property name="resolveLazily" value="true"/>
    </bean>


    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <!-- 指定FreeMarker模板文件目录 -->
        <!--单路径-->
        <!--<property name="templateLoaderPath" value="/skins/next/ftl/"/>-->

        <!--多路径-->
        <property name="templateLoaderPaths">
            <list>
                <value>/skins/next/</value>
                <value>/admin/</value>
            </list>
        </property>
    </bean>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="prefix" value=""/>
        <property name="suffix" value=".ftl"/>
        <property name="contentType" value="text/html; charset=UTF-8"/>
    </bean>

    <!-- 访问"/getUserName"时服务器发现找不到/WEB-INF/ftl/username.ftl，于是它就到这里来找了，结果自然是找到了 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>



    <!--<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">-->
        <!--<property name="viewClass"   value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />-->
        <!--<property name="prefix" value="/WEB-INF/ftl/" />-->
        <!--<property name="suffix" value=".ftl" />-->
        <!--&lt;!&ndash;<property name="order" value="2" />&ndash;&gt;-->
    <!--</bean>-->

    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
    <!--<bean-->
            <!--class="org.springframework.web.servlet.view.InternalResourceViewResolver"-->
            <!--p:prefix="/WEB-INF/" p:suffix=".jsp" />-->
</beans>